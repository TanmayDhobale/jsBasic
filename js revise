DATA TYPE  = it is classifys that which type of vlaue variable have and type of mathematical . 
type of data type =
1) strings =  if u have to assinged or string to any varible u should u used  ( ' ') around it  
2) number = u can use it very easy ( let a  = 23 ; )
3) object 
4) boolen 
5) undefined 
IMP THINGS TO REM = 
1) javascrpit consider o as a false value and all the non-zero value  are true. and empty strings value also a false .
// ex1  -  let a = 0 ;
           a = Boolean(a);
          console.log(a , typeof a ) ;    output = 0  , false 

  true  = 1
  false = 0 


IMP OPRETOR = 
1) !=  not equal to  
 EX -  let a = 89 ;
let b = 90 ; 
result= a !== b ;
console.log(result);     

SWITCH CASE  = 
1) 
let marks = "79";
switch (marks) {
    case "79" :
    console.log("good bhai unemployed rahega" );
    break ;
    case "80 " :
        console.log("bhai ki job ahahah ");
      break ; 

}

2)  defult = let marks = "9";
switch (marks) {
    case "79" :
    console.log("good bhai unemployed rahega" );
    break ;
    case "80 " :
        console.log("bhai ki job ahahah ");
      break ; 
      default : 
      console.log("kuch bhi karle job nahi legaegi "); 

}

  Array = arrays is an  object that can store multiple vlaue at once  
const name = ["tanmay","rahul" ,"pankaj" , "lala" ,"nana"]
console.log(name); 


EX 1 ) HOW TO ACEES AN ARRAY =  
const name = ["tanmay","rahul" ,"pankaj" , "lala" ,"nana"]
console.log(name[3]); 


 U CAN U AND MAEK MIX DATA TYPE OF ARRAAY  
EX 2 )  = 
const name = ["tanmay", 9 ,"pankaj" ,"jaja" ,"nana"
      , function (sum )   {
        sum = 1 + 3 } ,{ namee: 'lata'} ]
console.log(name); 

AND U CAN CHNAEG THE ARRYA OR UPDATE IT LATER LIKET HIS =
 const name = ["tanmay", 9 ,"pankaj" ,"jaja" ,"nana"
      , function (sum )   {
        sum = 1 + 3 } ,{ namee: 'lata'} ]
const newName=name ;
  newName[0]=  "tanmayy" 
console.log(name);  

SOME METHODS OF ARRAY = 
INDEXOF = const num = [ 4,46,647,5675,4565,7,545]
console.log(num.indexOf(46))  ANS = 1  

IF U WANT CHECK THAT NUMBER IS AVAIBLE THERE THEN U USED ( INCLUDE.OF )
EX =  const num = [ 4,46,647,5675,4565,7,545]
console.log(num.includes(46)) 


FUNCTION = 
it is an phenonmena that use of the part of code again again deffernt part of the code . 
EX = 
const a =13 ;
const b = 12;
sum(a,b)

const c = 55;
const d =42;
sum(c,d)

function sum(g,f){
    const sum = g+f;
    console.log('the sum is '+sum);
}

SYNTAX = 
function nameOfFunction(paramater1 , parameter 2 = it is an input ) {
    operation write here 
     and finally= return 
}

Return = it an besicaly use for the return somthing u wnat at the end of code . 
function sum(g,f){
    const sum = g+f;
    console.log(sum);
   return sum ;
}

const a =13 ;
const b = 12;
const result = sum(a,b);
console.log("value"+result);

const c = 55;
const d =42;
sum(c,d)

EXPRESION FUN = 
is is an function that do same as function but anonomylse like this function no need a name so we can use this as installse wiht varible like this = 
 const sqaure = function (num){
    const result = num+num;
    return result ;}
    console.log(sqaure)(result)

// NASTED FUNCTION =
Besically it an function but it can hold multiple funtction in it and they call call ad retun the valsue at end but it cant vallthe outer function if u goes outside that functio n

function addsquare(a,b){
    const sa = square(a);
    const sb = square(b);
    function square (c){
        return c * c ;
    }
    return sa + sb ; 

}
console.log( addsquare( 5 ,3 )) ; 


// ARROW FUNCTION 

function tanmay ( ){
    console.log('heyy wassup ');
}

// now i am acully calling that  function 
tanmay();   // now i am acully calling that function

const hello = (count) => {
    for (let i=0; i<count; i++){
        console.log("Hello world!");
    }

}
hello(5); 

EX OF NASTED USOMNG = 

function hii(a, b) {
    const square = (c) => {
        return c * c;
    };

    const sa = square(a);
    const sb = square(b);

    return sa + sb;
}






